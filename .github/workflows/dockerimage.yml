name: Docker Image CI
on:
  workflow_dispatch:
    inputs:
      name:
        description: "Build image"
        required: true
        default: "come on"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKERHUB_IMAGE=peng-huang-cc/graphql-demo
          GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/graphql-demo
          VERSION=${GITHUB_REF#refs/tags/v}
          # TAGS="${DOCKERHUB_IMAGE}:${VERSION},${DOCKERHUB_IMAGE}:latest"
          TAGS="${TAGS},${GHCR_IMAGE}:${VERSION},${GHCR_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=dockerhub_image::${DOCKERHUB_IMAGE}
          echo ::set-output name=ghcr_image::${GHCR_IMAGE}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # context: .
          # file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags }}
            # ghcr.io/peng-huang-cc/graphql-demo:${{ github.event.inputs.name }}
            # ghcr.io/peng-huang-cc/graphql-demo:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
